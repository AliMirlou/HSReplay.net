# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-27 21:33
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
import django.utils.timezone
import django_intenum
import hearthstone.enums
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('decks', '0006_auto_20170824_1413'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassClusterSnapshot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('player_class', django_intenum.IntEnumField(choices=[(0, 'INVALID'), (1, 'DEATHKNIGHT'), (2, 'DRUID'), (3, 'HUNTER'), (4, 'MAGE'), (5, 'PALADIN'), (6, 'PRIEST'), (7, 'ROGUE'), (8, 'SHAMAN'), (9, 'WARLOCK'), (10, 'WARRIOR'), (11, 'DREAM'), (12, 'NEUTRAL')], default=0, validators=[django_intenum.IntEnumValidator(hearthstone.enums.CardClass)])),
            ],
        ),
        migrations.CreateModel(
            name='ClusterSetSnapshot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('as_of', models.DateTimeField(default=django.utils.timezone.now)),
                ('game_format', django_intenum.IntEnumField(choices=[(0, 'FT_UNKNOWN'), (1, 'FT_WILD'), (2, 'FT_STANDARD')], default=2, validators=[django_intenum.IntEnumValidator(hearthstone.enums.FormatType)])),
            ],
            options={
                'get_latest_by': 'as_of',
            },
        ),
        migrations.CreateModel(
            name='ClusterSnapshot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cluster_id', models.IntegerField()),
                ('experimental', models.BooleanField(default=False)),
                ('signature', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('name', models.CharField(blank=True, max_length=250)),
                ('archetype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='decks.Archetype')),
                ('class_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.ClassClusterSnapshot')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterSnapshotMember',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('observations', models.IntegerField()),
                ('win_rate', models.FloatField()),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.ClusterSnapshot')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Deck')),
            ],
        ),
        migrations.AddField(
            model_name='classclustersnapshot',
            name='cluster_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.ClusterSetSnapshot'),
        ),
    ]
